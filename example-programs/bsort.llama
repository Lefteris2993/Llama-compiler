let bsort (x : array of int)  =
  let swap (x : int ref) (y : int ref) =
    let t = !x in x := !y ; y := t in
  let mutable changed : bool in
  changed := true;
  while !changed do
    changed := false;
    for i = 0 to dim x - 2 do
      if !x[i] > !x[i+1] then
      begin
        swap x[i] x[i+1];
        changed := true
      end
    done
  done

let main = 
  let print_array (msg : array of char) (x : array of int) = 
    print_string msg;
    for i = 0 to dim x - 1 do
      if i > 0 then print_string ", ";
      print_int !x[i]
    done;
    print_string "\n" in

  let mutable seed : int
  and mutable x[16] : array of int in

  seed := 65;
  for i = 0 to 15 do
    seed := (!seed * 137 + 220 + i) mod 101;
    x[i] := !seed
  done;
  print_array "Initial array: " x;
  bsort x;
  print_array "Sorted array: " x
